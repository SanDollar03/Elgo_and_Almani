Mediapipeを使用して、Flaskを仮想サーバーとして立て、ブラウザ上で動かすには、以下の手順に従います。

環境の準備:
必要なライブラリをインストールします。
Flask、Mediapipe、OpenCVをインストールします。
bash
コードをコピーする
pip install flask mediapipe opencv-python
Flaskアプリケーションの作成:
Flaskアプリケーションを作成し、ブラウザからのリクエストを処理できるようにします。
python
コードをコピーする
# app.py
from flask import Flask, render_template, Response
import cv2
import mediapipe as mp

app = Flask(__name__)

mp_drawing = mp.solutions.drawing_utils
mp_hands = mp.solutions.hands

# Video capture object
cap = cv2.VideoCapture(0)

def generate_frames():
    with mp_hands.Hands(
        min_detection_confidence=0.2,
        min_tracking_confidence=0.2) as hands:
        while cap.isOpened():
            success, frame = cap.read()
            if not success:
                break

            # Convert the BGR image to RGB.
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

            # Process the image and draw hand landmarks.
            results = hands.process(frame)
            frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)

            if results.multi_hand_landmarks:
                for hand_landmarks in results.multi_hand_landmarks:
                    mp_drawing.draw_landmarks(
                        frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Encode the frame to JPEG
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()

            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/video_feed')
def video_feed():
    return Response(generate_frames(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(debug=True)
HTMLテンプレートの作成:
HTMLファイルを作成し、ビデオフィードを表示します。
html
コードをコピーする
<!-- templates/index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mediapipe with Flask</title>
</head>
<body>
    <h1>Mediapipe Hand Tracking</h1>
    <img src="{{ url_for('video_feed') }}" width="800" height="600">
</body>
</html>
サーバーの起動:
Flaskサーバーを起動します。
bash
コードをコピーする
python app.py
ブラウザでアクセス:
ブラウザで http://127.0.0.1:5000/ にアクセスします。手の追跡が表示されます。
これで、Mediapipeを使った手の追跡をブラウザ上で確認できるようになります。






ファイル構成を教えて下さい。
ChatGPT
FlaskアプリケーションとMediapipeを使ったプロジェクトのファイル構成は以下のようになります。

scss
コードをコピーする
mediapipe_flask/
│
├── app.py
├── templates/
│   └── index.html
├── static/
│   └── (必要に応じて追加のCSS、JavaScriptファイルをここに配置します)
└── requirements.txt
各ファイルの内容は以下の通りです。

app.py:

python
コードをコピーする
from flask import Flask, render_template, Response
import cv2
import mediapipe as mp

app = Flask(__name__)

mp_drawing = mp.solutions.drawing_utils
mp_hands = mp.solutions.hands

# Video capture object
cap = cv2.VideoCapture(0)

def generate_frames():
    with mp_hands.Hands(
        min_detection_confidence=0.2,
        min_tracking_confidence=0.2) as hands:
        while cap.isOpened():
            success, frame = cap.read()
            if not success:
                break

            # Convert the BGR image to RGB.
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)

            # Process the image and draw hand landmarks.
            results = hands.process(frame)
            frame = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)

            if results.multi_hand_landmarks:
                for hand_landmarks in results.multi_hand_landmarks:
                    mp_drawing.draw_landmarks(
                        frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            # Encode the frame to JPEG
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()

            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/video_feed')
def video_feed():
    return Response(generate_frames(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(debug=True)
templates/index.html:

html
コードをコピーする
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mediapipe with Flask</title>
</head>
<body>
    <h1>Mediapipe Hand Tracking</h1>
    <img src="{{ url_for('video_feed') }}" width="800" height="600">
</body>
</html>
requirements.txt:

コードをコピーする
flask
mediapipe
opencv-python
このファイル構成に従ってプロジェクトをセットアップすれば、Flaskサーバー上でMediapipeの手の追跡機能をブラウザに表示できるようになります。
